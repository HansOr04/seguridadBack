import mongoose, { Schema } from 'mongoose';
import { IVulnerability } from '../types';

const vulnerabilitySchema = new Schema<IVulnerability>({
  codigo: {
    type: String,
    required: true,
    unique: true,
    trim: true,
    maxlength: 50
  },
  nombre: {
    type: String,
    required: true,
    trim: true,
    maxlength: 200
  },
  categoria: {
    type: String,
    required: true,
    trim: true,
    maxlength: 100
  },
  descripcion: {
    type: String,
    required: true,
    maxlength: 1000
  },
  facilidadExplotacion: {
    type: Number,
    required: true,
    min: 0,
    max: 10
  },
  vectoresAtaque: [{
    type: String,
    trim: true,
    maxlength: 100
  }],
  afectaA: [{
    type: Schema.Types.ObjectId,
    ref: 'Asset'
  }],
  amenazasRelacionadas: [{
    type: Schema.Types.ObjectId,
    ref: 'Threat'
  }],
  estado: {
    type: String,
    required: true,
    enum: ['Activa', 'Mitigada', 'Aceptada', 'En Tratamiento'],
    default: 'Activa'
  },
  fechaDeteccion: {
    type: Date,
    default: Date.now
  },
  fechaMitigacion: {
    type: Date
  }
}, {
  timestamps: { createdAt: 'fechaDeteccion', updatedAt: false }
});

// Índices
vulnerabilitySchema.index({ codigo: 1 });
vulnerabilitySchema.index({ categoria: 1 });
vulnerabilitySchema.index({ facilidadExplotacion: -1 });
vulnerabilitySchema.index({ estado: 1 });
vulnerabilitySchema.index({ fechaDeteccion: -1 });

// Virtual para nivel de vulnerabilidad
vulnerabilitySchema.virtual('nivelVulnerabilidad').get(function() {
  if (this.facilidadExplotacion >= 8) return 'Crítica';
  if (this.facilidadExplotacion >= 6) return 'Alta';
  if (this.facilidadExplotacion >= 4) return 'Media';
  if (this.facilidadExplotacion >= 2) return 'Baja';
  return 'Muy Baja';
});

vulnerabilitySchema.set('toJSON', { virtuals: true });

export const Vulnerability = mongoose.model<IVulnerability>('Vulnerability', vulnerabilitySchema);